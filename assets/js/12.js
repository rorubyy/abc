function switchChart(e) { $(window).width() > 992 ? (barFontsize = 16, updateScales(e)) : (barFontsize = 11, updateScales(e)) }

function updateScales(e) { e.options.scales.xAxes[0].ticks = { fontSize: barFontsize, fontColor: "#6989d1", stepSize: 4 }, e.options.scales.yAxes[0].ticks = { callback: function(e, t, a) { if (Math.floor(e) === e) return [e + "%"] }, fontColor: "#6989d1", fontSize: barFontsize, stepSize: 4, padding: 20 }, e.update() }

function updateChart(e, t, a) { e || (a.preventDefault(), $(".sub-title").find(".active").removeClass("active"), $(a.currentTarget).addClass("active"), $("#legend-0-item").text(chartLabel[t]), performance_data2.datasets[0].data = dataTemp[t], $(".bounceIn").removeClass("bounceIn"), setTimeout(function() { "tbi3" !== t ? $(".speech-bubble.yellow").addClass("bounceIn") : $(".bounceIn").removeClass("bounceIn") }, 100)), $(window).width() > 768 ? (achivenmentChart.options.scales.xAxes[0].ticks.fontSize = 16, achivenmentChart.options.scales.xAxes[0].ticks.maxTicksLimit = 6, achivenmentChart.options.scales.yAxes[0].ticks.fontSize = 16, achivenmentChart.options.layout.padding.right = 30) : (achivenmentChart.options.scales.xAxes[0].ticks.fontSize = 10, achivenmentChart.options.scales.xAxes[0].ticks.maxTicksLimit = 3, achivenmentChart.options.scales.yAxes[0].ticks.fontSize = 10, achivenmentChart.options.layout.padding.right = 10), achivenmentChart.update() }

function placeResult() { let e = $(".age-range").val();
    $(".count").stop().addClass("slide-down"), $(".average").text(data_group[e][$(".gender.active").attr("data-gender")].targetMoney), $(".year").text(data_group[e][$(".gender.active").attr("data-gender")].targetYear), $(".payment").text(data_group[e][$(".gender.active").attr("data-gender")].MonthMoney), setTimeout(function() { $(".count").removeClass("slide-down") }, 1e3) }

function pop_fix() { $(".rd_start_btn").click(function() { $(".experience_pop").slideDown("slow"), show_fixed_pop() }), $("#close_experience").click(function() { $(".experience_pop").slideUp("slow"), close_fixed_pop() }) }
$(window).scroll(function() { $(this).scrollTop() > 200 ? $(".index_header").removeClass("index_header__top_style") : $(".index_header").addClass("index_header__top_style") }), wow = new WOW, wow.init(), $(".wow").each(function() { var e = .3 * $(this).height();
    $(this).attr("data-wow-offset", e) });
var main = main = $("#scroll");
$(".scroll_item").click(function(e) { e.preventDefault(), e = $(this).data("link"), target_offset = $("#" + e).offset(), target_top = target_offset.top, $("html, body").animate({ scrollTop: target_top - 60 }, 500), main.children().removeClass("scroll_item_active"), $(this).addClass("scroll_item_active") }), $(window).scroll(function() { var e = $(window).scrollTop();
    $(".rd_section").each(function(t) { $(this).position().top - 70 <= e && ($(".scroll_item.scroll_item_active").removeClass("scroll_item_active"), $(".scroll_item").eq(t).addClass("scroll_item_active")) }) }).scroll();
var ctx = document.getElementById("myChart");
Chart.defaults.global.defaultFontFamily = 'Roboto, 敺株��迤暺煾��, "Microsoft JhengHei", sans-serif';
var performance_data = { defaultFontFamily: 'Roboto, 敺株��迤暺煾��, "Microsoft JhengHei", sans-serif', labels: ["8~9�𧢲��", "11~12�𧢲��", "14~15�𧢲��", "17~18�𧢲��"], datasets: [{ shadowOffsetX: 0, shadowOffsetY: 0, shadowBlur: 10, shadowColor: "rgba(0, 0, 0, .3)", datalabels: { align: "end", anchor: "end" }, maxBarThickness: 8, minBarLength: .1, maxBarThickness: 8, data: [5.35, 5.95, -3.23, 1.8], backgroundColor: ["#094dd0", "#0b61ea", "#088de9", "#03bef1"] }] };
let barData = { maintainAspectRatio: !1, defaultFontFamily: 'Roboto, 敺株��迤暺煾��, "Microsoft JhengHei", sans-serif', layout: { padding: { top: 40 } }, legend: { display: !1 }, scales: { xAxes: [{ ticks: { autoSkip: !1, fontColor: "#6989d1", fontSize: 16 }, maxBarThickness: 110, gridLines: { display: !1, drawBorder: !1 } }], yAxes: [{ ticks: { callback: function(e, t, a) { if (Math.floor(e) === e) return [e + "%"] }, fontColor: "#6989d1", fontSize: 16, stepSize: 4 }, gridLines: { display: !0, borderDash: [5, 5], color: "#3768c7", zeroLineColor: "#3768c7", drawBorder: !1 } }] }, tooltips: { titleFontFamily: "'Noto Sans', 'Noto Sans TC', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'", bodyFontFamily: "'Noto Sans', 'Noto Sans TC', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'", callbacks: { label: function(e, t) { return "撟喳��𥼚�祉����" + e.yLabel.toFixed(2) + "%" } } }, plugins: { datalabels: { color: "#fff", formatter: function(e, t) { return [e + "%"] }, font: function(e) { var t = e.chart.width,
                    a = Math.round(t / 32); return { size: a } } } } };
var myChart = new Chart(ctx, { type: "bar", data: performance_data, options: barData });
let barFontsize = 16;
var timer;
$(window).resize(function() { window.clearTimeout(timer), timer = window.setTimeout(function() { switchChart(myChart) }, 100) }), $(function() { switchChart(myChart), updateChart(!0) });
var ctx2 = document.getElementById("achivenment-chart");
const dataTemp = { aggressive: [0, .24, 1.04, 1.41, 1.75, 1.51, 1.66, 1.93, 2.23, 2.14, 2.39, 2.37, 2.26, 2.51, 2.4, 1.91, .29, -.62, -1.03, -2.59, -3.65, -2.03, -2.2, -.92, -1.58, -2.61, -5.89, -5.15, -6.92, -12, -10.69, -15.44, -14.99, -17.75, -18.45, -18.31, -19.51, -15.7, -14.71, -12.09, -12.72, -11.58, -11.55], moderate: [0, .22, .85, 1.14, 1.48, 1.38, 1.57, 1.76, 2.03, 2.05, 2.3, 2.28, 2.2, 2.42, 2.4, 2.02, .6, -.2, -.56, -1.94, -2.77, -1.3, -1.5, -.32, -.86, -1.57, -4.36, -3.84, -5.5, -9.73, -9.03, -13.17, -12.93, -15.39, -16.33, -16.35, -17.22, -13.64, -12.78, -10.49, -10.79, -9.77, -9.8], conservative: [0, -.16, -.43, -.59, -.47, -.23, -.13, -.19, -.34, -.28, -.13, -.13, .05, -.02, .23, .4, .68, .72, .62, .72, 1, 1.16, 1.3, 1.61, 1.81, 2.36, 2.48, 1.28, .78, .08, -.97, -.95, -2.24, -4.16, -5.57, -5.07, -4.47, -3.69, -3.38, -2.95, -2.11, -1.75, -1.92], simple1: [0, -1.22, .53, .68, 2.21, 1.02, .69, 1.47, 2.43, 2.58, 2.79, 2.33, 1.34, 2.29, 2, 1.66, .35, .39, -.53, -1.77, -1.77, -2.82, -1.46, -.89, .17, -1.51, -4.5, -4.28, -5.23, -9.33, -11.89, -15.46, -17.88, -19.8, -24.48, -19.67, -22.66, -19.22, -16.1, -15.3, -15.63, -16.23, -15.55], simple2: [0, .73, 2.23, 3.38, 3.73, 3.17, 3.92, 4.1, 4.77, 4.6, 4.79, 4.79, 4.49, 4.98, 4.58, 3.48, .01, -3.02, -3.38, -7.65, -8.41, -4.19, -6.89, -2.96, -6.25, -7.85, -14.85, -10.64, -15.01, -23.09, -15.95, -26.02, -21.59, -25.65, -25.3, -28.54, -30.63, -24.13, -23.25, -18.46, -21.21, -18.57, -19.87], tbi1: [0, .26, .94, 1.14, 1.26, 1.15, 1.33, 1.87, 1.9, 2.07, 2.17, 2.17, 2.27, 2.12, 2.55, 2.55, 1.64, -.06, -.12, -1.19, -3.02, -4.9, -3.78, -2.74, -2.6, -2.73, -4.34, -6.71, -6.83, -7.53, -10.84, -11.49, -13.32, -14.03, -16.17, -16.35, -14.45, -16.72, -14.3, -12.86, -11.47, -11.45, -11.33, -10.78], tbi2: [0, -.1, 1.22, 1.64, 2.16, 1.79, 1.54, 2.12, 2.65, 2.52, 2.45, 2.45, 2.43, 2.02, 2.38, 2.1, 1.74, .38, .42, -.06, -.36, -2.09, -1.86, -1.22, -.56, .03, -1.3, -4.11, -3.98, -4.4, -8.76, -9.14, -12.88, -13.46, -16.2, -18.68, -17.14, -20.48, -18.63, -15.89, -14.16, -14.09, -14.6, -14.1], tbi3: [0, .56, 2.02, 2.55, 2.8, 2.38, 2.75, 3.45, 3.92, 3.86, 4.23, 4.23, 4.28, 4.1, 4.85, 4.02, 3.43, .34, -1.39, -1.99, -4.98, -7.28, -4.94, -4.97, -2.74, -4.08, -6.39, -12.14, -10.77, -13.32, -21.19, -18.39, -25.39, -23.21, -27.11, -26.58, -26.64, -29.41, -23.94, -21.64, -18.32, -17.52, -17.17, -16.89], tbi4: [0, -.1, .12, .48, .61, .55, .55, .79, .95, .92, 1.09, 1.09, 1.11, 1.05, 1.1, 1.1, .94, .14, -.35, -.87, -1.54, -2.54, -2, -1.72, -1.25, -1.67, -2.43, -5.21, -4.97, -6.48, -9.77, -9.86, -12.87, -13.33, -15.23, -16.51, -15.45, -17.5, -15.92, -14.31, -12.44, -12.51, -12.99, -11.71] },
    chartLabel = { aggressive: "蝛齿扔���", moderate: "蝛拙�亙��", conservative: "靽嘥����", tbi1: "�函�Fund��衤葉", tbi2: "鈭墧散雿����", tbi3: "頞典𨋍�崕閫垍桊", tbi4: "����㗛�躰𢞁瘚�" };
Chart.defaults.global.defaultFontFamily = 'Roboto, 敺株��迤暺煾��, "Microsoft JhengHei", sans-serif';
var performance_data2 = { labels: ["2020/01/31", "2020/02/03", "2020/02/04", "2020/02/05", "2020/02/06", "2020/02/07", "2020/02/10", "2020/02/11", "2020/02/12", "2020/02/13", "2020/02/14", "2020/02/17", "2020/02/18", "2020/02/19", "2020/02/20", "2020/02/21", "2020/02/24", "2020/02/25", "2020/02/26", "2020/02/27", "2020/02/28", "2020/03/02", "2020/03/03", "2020/03/04", "2020/03/05", "2020/03/06", "2020/03/09", "2020/03/10", "2020/03/11", "2020/03/12", "2020/03/13", "2020/03/16", "2020/03/17", "2020/03/18", "2020/03/19", "2020/03/20", "2020/03/23", "2020/03/24", "2020/03/25", "2020/03/26", "2020/03/27", "2020/03/30", "2020/03/31"], datasets: [{ label: "蝛齿扔���", fill: !1, lineTension: .1, borderJoinStyle: "miter", datalabels: { display: !1 }, data: dataTemp.aggressive, borderColor: "#f5d986", pointBorderColor: "#f5d986", pointBackgroundColor: "#f5d986", pointRadius: 0, pointHoverRadius: 4 }, { label: "�蝱���䭾�𦠜��彍", fill: !1, lineTension: .1, borderJoinStyle: "miter", datalabels: { display: !1 }, data: dataTemp.simple1, borderColor: "#42bef1", pointBorderColor: "#42bef1", pointBackgroundColor: "#42bef1", pointRadius: 0, pointHoverRadius: 4 }, { label: "S&P 500", fill: !1, lineTension: .1, borderJoinStyle: "miter", datalabels: { display: !1 }, data: dataTemp.simple2, borderColor: "#348de9", pointBorderColor: "#348de9", pointBackgroundColor: "#348de9", pointRadius: 0, pointHoverRadius: 4 }] };
let barData2 = { maintainAspectRatio: !1, layout: { padding: { top: 40, right: 30 } }, legend: { display: !1 }, legendCallback: function(e) { var t = [];
        t.push('<ul class="row">'); for (var a = 0; a < e.data.datasets.length; a++) t.push('<li class="col-4 col-lg-12 col-sm-4" style="position: relative;">'), a || t.push('<div class="speech-bubble yellow bounceIn"><div class="bubble-text">蝛拙�交�𡑒��</div></div>'), t.push('<span class="legend-icon"></span><span id="legend-' + a + '-item" style="color:' + e.data.datasets[a].borderColor + ';text-align:right">'), e.data.datasets[a] && t.push(e.data.datasets[a].label), t.push("</span></li>"); return t.push("</ul>"), t.join("") }, scales: { xAxes: [{ ticks: { autoSkip: !0, fontColor: "#6989d1", fontSize: 16, minRotation: 360, labelOffset: 10, padding: 20, maxTicksLimit: 6 }, gridLines: { display: !1, drawBorder: !1 } }], yAxes: [{ ticks: { callback: function(e, t, a) { if (Math.floor(e) === e) return [e + "%"] }, fontColor: "#6989d1", fontSize: 16, stepSize: 5, padding: 20 }, gridLines: { display: !0, borderDash: [5, 5], color: "#3768c7", zeroLineColor: "#3768c7", drawBorder: !1 } }] }, tooltips: { callbacks: { label: function(e, t) { return "撟喳��𥼚�祉����" + e.yLabel.toFixed(2) + "%" } } } };
var achivementChart, achivenmentChart = new Chart(ctx2, { type: "line", data: performance_data2, options: barData2 });
document.getElementById("achivenment-legend").innerHTML = achivenmentChart.generateLegend(), $(window).resize(function() { window.clearTimeout(achivementChart), achivementChart = window.setTimeout(function() { updateChart(!0) }, 100) }), $(".compare-chart").find(".btn").each(function(e, t) { $(t).click(updateChart.bind(this, !1, $(t).data("temp"))) }), $("#myTab a").on("click", function(e) { e.preventDefault(), $(this).tab("show") }), $("#desktop_slick").slick({ prevArrow: "#pro-gbi", nextArrow: "#pro-tbi", asNavFor: "#mobile_slick", infinite: !1, waitForAnimate: !1, easing: "ease", draggable: !1, swipe: !1 }), $("#mobile_slick").slick({ prevArrow: "#pro-gbi", nextArrow: "#pro-tbi", asNavFor: "#desktop_slick", infinite: !1, waitForAnimate: !1, easing: "ease", draggable: !1, swipe: !1 });
var data_group = { "24甇脖誑銝�": [{ gender: "�琸", targetMoney: "32", targetYear: "5", MonthMoney: "5,000" }, { gender: "憟�", targetMoney: "32", targetYear: "5", MonthMoney: "5,000" }], "25-34": [{ gender: "�琸", targetMoney: "96", targetYear: "10", MonthMoney: "7,000" }, { gender: "憟�", targetMoney: "75", targetYear: "8", MonthMoney: "7,000" }], "35-44": [{ gender: "�琸", targetMoney: "260", targetYear: "12", MonthMoney: "15,000" }, { gender: "憟�", targetMoney: "140", targetYear: "10", MonthMoney: "10,000" }], "45-54": [{ gender: "�琸", targetMoney: "150", targetYear: "10", MonthMoney: "11,000" }, { gender: "憟�", targetMoney: "110", targetYear: "7", MonthMoney: "12,000" }], "55-64": [{ gender: "�琸", targetMoney: "65", targetYear: "5", MonthMoney: "10,000" }, { gender: "憟�", targetMoney: "65", targetYear: "5", MonthMoney: "10,000" }] };
$(".age-range").change(placeResult), $(".gender").click(function() { $(".gender").removeClass("active"), $(this).addClass("active"), placeResult() }), $(".feature_card_wrap").hover(function() { $(this).toggleClass("applyflip") });
var isIE = null != document.body.style.msTouchAction;
pop_fix();
var close_fixed_pop = function() { isIE ? $("body").removeClass("pop_body_notscroll") : closeDialog() },
    show_fixed_pop = function() { isIE ? $("body").addClass("pop_body_notscroll") : showDialog() },
    showDialog = function() { const e = document.documentElement.style.getPropertyValue("--scroll-y"),
            t = document.body;
        t.style.position = "fixed", t.style.top = "-" + e },
    closeDialog = function() { const e = document.body,
            t = e.style.top;
        e.style.position = "", e.style.top = "", window.scrollTo(0, -1 * parseInt(t || "0")) };
isIE || window.addEventListener("scroll", function() { document.documentElement.style.setProperty("--scroll-y", scrollY + "px") });